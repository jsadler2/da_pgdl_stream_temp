# -*- coding: utf-8 -*-
"""lstm_da_skeleton

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BKxTvxi_mZpfb7NBInT0EkBoL0rUb42D
"""

import tensorflow as tf
import numpy as np

"""# Set up the model"""

num_batches, seq_len, num_predictors = 1, 1, 2
input_shape = tf.keras.Input(shape=(seq_len, num_predictors), batch_size=num_batches)

lstm = tf.keras.layers.LSTM(units=1, return_state=True, return_sequences=True, stateful=True)
seq, h, c = lstm(input_shape)
dense = tf.keras.layers.Dense(1)
outputs = dense(seq)

model = tf.keras.Model(inputs=input_shape, outputs=outputs, name="lstm_da")

model.summary()

"""# Predict, update"""

inputs = tf.random.normal([num_batches, seq_len, num_predictors])
predictions = model(inputs)

predictions

lstm.states

lstm.reset_states(states=(np.array([[4]]), np.array([[1]])))

model(inputs)

lstm.states